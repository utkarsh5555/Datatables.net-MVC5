@{
    ViewBag.Title = "Name";
}
<link href="../assets/vendors/custom/datatables/datatables.bundle.css" rel="stylesheet" type="text/css" />
@Styles.Render("~/assets/vendors/general/bootstrap-datepicker")
<style>
    .table th, .table td {
        padding: 0.1em !important;
    }

    table.dataTable thead .sorting:before, table.dataTable thead .sorting:after, table.dataTable thead .sorting_asc:before, table.dataTable thead .sorting_asc:after, table.dataTable thead .sorting_desc:before, table.dataTable thead .sorting_desc:after, table.dataTable thead .sorting_asc_disabled:before, table.dataTable thead .sorting_asc_disabled:after, table.dataTable thead .sorting_desc_disabled:before, table.dataTable thead .sorting_desc_disabled:after {
        bottom: 0.1em !important;
    }
</style>
<div class="kt-content  kt-grid__item kt-grid__item--fluid" id="kt_content">

    <div class="kt-portlet kt-portlet--mobile">
        <div class="kt-portlet__body">

            <!--begin: Search Form -->

            <form class="kt-form kt-form--fit kt-margin-b-20">
                <div class="row kt-margin-b-20">
                    <div class="col-lg-3 kt-margin-b-10-tablet-and-mobile">
                        <label>Name:</label>
                        <input type="text" class="form-control kt-input" placeholder="First/Last Name" data-col-index="2">
                    </div>
                    <div class="col-lg-3 kt-margin-b-10-tablet-and-mobile">
                        <label>User Name:</label>
                        <input type="text" class="form-control kt-input" placeholder="User Name" data-col-index="3">
                    </div>
                    <div class="col-lg-3 kt-margin-b-10-tablet-and-mobile">
                        <label>Order Code:</label>
                        <input type="text" class="form-control kt-input" placeholder="Order Code" data-col-index="4">
                    </div>
                    <div class="col-lg-3 kt-margin-b-10-tablet-and-mobile">
                        <label>Role:</label>
                        @Html.DropDownList("roleDDL", (List<SelectListItem>)ViewBag.RoleList, new { @data_col_index = "6", @class = "form-control kt-input" })
                    </div>
                </div>
                <div class="row kt-margin-b-20">
                    <div class="col-lg-3 kt-margin-b-10-tablet-and-mobile">
                        <label>Active:</label>
                        <select class="form-control kt-input" data-col-index="9">
                            <option value="">Select All</option>
                            <option value="true" selected>Active</option>
                            <option value="false">Inactive</option>
                        </select>
                    </div>
                    <div class="col-lg-3 kt-margin-b-10-tablet-and-mobile">
                        <label>Status:</label>
                        <select class="form-control kt-input" data-col-index="10">
                            <option value="">Select All</option>
                            <option value="true">Online</option>
                            <option value="false">Offline</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <button class="btn btn-primary btn-brand--icon" id="kt_search">
                            <span>
                                <i class="la la-search"></i>
                                <span>Search</span>
                            </span>
                        </button>
                        &nbsp;&nbsp;
                        <button class="btn btn-secondary btn-secondary--icon" id="kt_reset">
                            <span>
                                <i class="la la-close"></i>
                                <span>Reset</span>
                            </span>
                        </button>
                        <div class="dropdown dropdown-inline pull-right">
                            <button type="button" class="btn btn-default btn-icon-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="la la-download"></i> Export
                            </button>
                            <div class="dropdown-menu dropdown-menu-right" style="z-index: 98">
                                <ul class="kt-nav">
                                    <li class="kt-nav__section kt-nav__section--first">
                                        <span class="kt-nav__section-text">Choose an option</span>
                                    </li>
                                    <li class="kt-nav__item">
                                        <a href="#" class="kt-nav__link" id="export_print">
                                            <i class="kt-nav__link-icon la la-print"></i>
                                            <span class="kt-nav__link-text">Print</span>
                                        </a>
                                    </li>
                                    <li class="kt-nav__item">
                                        <a href="#" class="kt-nav__link" id="export_print_all">
                                            <i class="kt-nav__link-icon la la-print"></i>
                                            <span class="kt-nav__link-text">Print All</span>
                                        </a>
                                    </li>
                                    <li class="kt-nav__item">
                                        <a href="#" class="kt-nav__link" id="export_copy">
                                            <i class="kt-nav__link-icon la la-copy"></i>
                                            <span class="kt-nav__link-text">Copy</span>
                                        </a>
                                    </li>
                                    <li class="kt-nav__item">
                                        <a href="#" class="kt-nav__link" id="export_copy_all">
                                            <i class="kt-nav__link-icon la la-copy"></i>
                                            <span class="kt-nav__link-text">Copy All</span>
                                        </a>
                                    </li>
                                    <li class="kt-nav__item">
                                        <a href="#" class="kt-nav__link" id="export_excel">
                                            <i class="kt-nav__link-icon la la-file-excel-o"></i>
                                            <span class="kt-nav__link-text">Excel</span>
                                        </a>
                                    </li>
                                    <li class="kt-nav__item">
                                        <a href="#" class="kt-nav__link" id="export_excel_all">
                                            <i class="kt-nav__link-icon la la-file-excel-o"></i>
                                            <span class="kt-nav__link-text">Excel All</span>
                                        </a>
                                    </li>
                                    <li class="kt-nav__item">
                                        <a href="#" class="kt-nav__link" id="export_csv">
                                            <i class="kt-nav__link-icon la la-file-text-o"></i>
                                            <span class="kt-nav__link-text">CSV</span>
                                        </a>
                                    </li>
                                    <li class="kt-nav__item">
                                        <a href="#" class="kt-nav__link" id="export_csv_all">
                                            <i class="kt-nav__link-icon la la-file-text-o"></i>
                                            <span class="kt-nav__link-text">CSV All</span>
                                        </a>
                                    </li>
                                    <li class="kt-nav__item">
                                        <a href="#" class="kt-nav__link" id="export_pdf">
                                            <i class="kt-nav__link-icon la la-file-pdf-o"></i>
                                            <span class="kt-nav__link-text">PDF</span>
                                        </a>
                                    </li>
                                    <li class="kt-nav__item">
                                        <a href="#" class="kt-nav__link" id="export_pdf_all">
                                            <i class="kt-nav__link-icon la la-file-pdf-o"></i>
                                            <span class="kt-nav__link-text">PDF All</span>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <a href="@Url.Action("ManageUser")" class="btn btn-brand btn-elevate btn-icon-sm pull-right mr-2">
                            <i class="la la-plus"></i>
                            New User
                        </a>
                    </div>
                </div>
            </form>

            <!--begin: Datatable -->
            <table class="table table-striped table-hover" id="kt_table_1">
                <thead>
                    <tr>
                        <th>Actions</th>
                        <th>Id</th>
                        <th>Name</th>
                        <th>User Name</th>
                        <th>Order Code</th>
                        <th>Count</th>
                        <th>RoleId</th>
                        <th>Role</th>
                        <th>DeviceId</th>
                        <th>Active</th>
                        <th>Status</th>
                    </tr>
                </thead>
            </table>

            <!--end: Datatable -->
        </div>
    </div>
</div>
<!-- The Modal -->
<div class="modal fade" id="resetPassModal">
    <div class="modal-dialog  modal-dialog-centered">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Reset Password</h4>
                <button type="button" class="close" data-dismiss="modal"><span class="la la-times"></span></button>
            </div>
            <!-- Modal body -->
            <div class="modal-body" id="cpmBody">

            </div>
        </div>
    </div>

</div>
@section scripts
{

    <script src="../assets/vendors/general/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js" type="text/javascript"></script>
    @*<script src="../assets/vendors/general/bootstrap-datetime-picker/js/bootstrap-datetimepicker.min.js" type="text/javascript"></script>*@
    @*<script src="../assets/vendors/general/bootstrap-timepicker/js/bootstrap-timepicker.min.js" type="text/javascript"></script>*@

    <script src="../assets/vendors/custom/datatables/datatables.bundle.js" type="text/javascript"></script>
    <script>
        function OpenResetPassword(Id) {
            $('#resetPassModal').modal({ backdrop: 'static', keyboard: false });
            $("#cpmBody").html('<div class="text-center"><span class="la  la-3x la-spin la-spinner"></span></div>');
            $('#resetPassModal').modal('show');
            $("#cpmBody").load('@Url.Action("ResetPassword", "Users", new { id = UrlParameter.Optional })' + "/" + Id);

        }


        var table;
        var startPage = 1;
        var startSortOrder = [[2, 'asc']];
        var searchParamUser = [null, null, null, null, null, null, null, null, null, { "search": "true" }, null];

        var jsonPageParam = null;
        var jsonParamSortOrder = null;
        var jsonSearchParams = null;
        // debugger;
        try {
            jsonPageParam = Cookies.get("pageParamUser");
            jsonParamSortOrder = $.parseJSON(Cookies.get("pageParamSortOrder"));
            jsonSearchParams = $.parseJSON(Cookies.get("searchParamUser"));
        } catch (e) {
            Cookies.set("pageParamUser", startPage);
            Cookies.set("pageParamSortOrder", JSON.stringify(startSortOrder));
            Cookies.set("searchParamUser", JSON.stringify(searchParamUser));
            jsonPageParam = null;
            jsonParamSortOrder = null;
            jsonSearchParams = null;
        }



        if (jsonSearchParams != null)
            searchParamUser = jsonSearchParams;

        if (jsonParamSortOrder != null)
            startSortOrder = jsonParamSortOrder;

        if (jsonPageParam != null)
            startPage = jsonPageParam;

        //var jsonParams = $.parseJSON(data);

        // console.log(jsonParamSortOrder);

        $(document).ready(function () {

            $.fn.dataTable.Api.register('column().title()',
                function () {
                    return $(this.header()).text().trim();
                });
            table = $('#kt_table_1').DataTable({
                "displayStart": startPage,
                "searchCols": searchParamUser,
                dom: //"<'row'<'col-sm-12 col-md-5'l><'col-sm-12 col-md-7 dataTables_pager'p>>"+
                    "<'row'<'col-sm-12 col-md-4'l><'col-sm-12 col-md-3'i><'col-sm-12 col-md-5 dataTables_pager'p>>" +
                        "<'row'<'col-sm-12'tr>>",
                //scrollY: '30vh',
                responsive: true,
                searchDelay: 500,
                processing: true,
                lengthMenu: [[1, 5, 10, 25, 50, 100, -1], [1, 5, 10, 25, 50, 100, "All"]],
                serverSide: true,
                order: startSortOrder,
                language: {
                    infoFiltered: ""
                },
                //pagingType: "first_last_numbers",
                buttons: [
                    {
                        extend: 'print',
                        exportOptions: {
                            modifier: {
                                search: 'applied',
                                order: 'applied'
                            },
                            columns: [2, 4, 5, 7, 9, 10]
                        }
                    },
                    {
                        extend: 'copyHtml5',
                        exportOptions: {
                            modifier: {
                                search: 'applied',
                                order: 'applied'
                            },
                            columns: [2, 4, 5, 7, 9, 10]
                        }
                    },
                    {
                        extend: 'excelHtml5',
                        exportOptions: {
                            modifier: {
                                search: 'applied',
                                order: 'applied'
                            },
                            columns: [2, 4, 5, 7, 9, 10]
                        }
                    },
                    {
                        extend: 'csvHtml5',
                        exportOptions: {
                            modifier: {
                                search: 'applied',
                                order: 'applied'
                            },
                            columns: [2, 4, 5, 7, 9, 10]
                        }
                    },
                    {
                        extend: 'pdfHtml5',
                        exportOptions: {
                            modifier: {
                                search: 'applied',
                                order: 'applied'
                            },
                            columns: [2, 4, 5, 7, 9, 10]
                        }
                    },
                    {
                        text: 'My button',
                        action: function (e, dt, node, config) {
                            alert('Button activated');
                        }
                    }
                ],
                ajax: {
                    url: '@Url.Action("UsersList", "Users")',
                    type: 'POST',
                    data: {
                        // parameters for custom backend script demo
                        columnsDef: [
                            'Actions', 'Id', 'Name', 'UserName', 'OrderCode', 'OrderCount', 'RoleId',
                            'RoleName', 'DeviceId', 'IsActive', 'IsLoggedIn', //, 'CreatedDate', 'ModifiedDate', 'Password'
                        ]
                    },
                },
                columns: [
                    { data: 'Actions', responsivePriority: -1 },
                    { data: 'Id' },
                    { data: 'Name' },
                    { data: 'UserName' },
                    { data: 'OrderCode' },
                    { data: 'OrderCount' },
                    { data: 'RoleId' },
                    { data: 'RoleName' },
                    { data: 'DeviceId' },
                    { data: 'IsActive' },
                    { data: 'IsLoggedIn' }
                    //{ data: 'CreatedDate' },
                    //{ data: 'ModifiedDate' },
                    //{ data: 'Password' }
                ],
                drawCallback: function (oSettings) {
                    //debugger;

                    var columns = table.ajax.params().columns;
                    searchParamUser = [];
                    $.each(columns, function (index, value) {
                        var obj = value.search.value;
                        if (obj !== "") {
                            var param = { "search": obj }
                            searchParamUser.push(param);
                            var element = $("[data-col-index=" + index + "]");
                            element.val(obj);

                        } else {
                            searchParamUser.push(null);
                        }
                    });

                    Cookies.set("searchParamUser", JSON.stringify(searchParamUser));
                    Cookies.set("pageParamUser", table.page());
                    Cookies.set("pageParamSortOrder", JSON.stringify(table.order()));
                },
                initComplete: function () {

                    // var rowFilter = $('<tr class="filter"></tr>').appendTo($(table.table().header()));
                    RoleId = [];
                    this.api().columns().every(function () {
                        var column = this;
                        //var input;
                        switch (column.title()) {
                            //case 'RoleId':
                            //        column.data().unique().sort().each(function (d, j) {
                            //            RoleId.push(d);
                            //        });
                            //        break;
                            //case 'Role':
                            //        column.data().unique().sort().each(function (d, j) {
                            //            $('.kt-input[data-col-index="6"]')
                            //                .append('<option value="' + RoleId[j] + '">' + d + '</option>');
                            //        });
                            //        break;

                            //case 'Status':
                            //    var status = {
                            //        true: { 'title': 'Online', 'class': 'kt-badge--success' },
                            //        false: { 'title': 'Offline', 'class': ' kt-badge--danger' },
                            //        //1: { 'title': 'Pending', 'class': 'kt-badge--brand' },
                            //        //2: { 'title': 'Delivered', 'class': ' kt-badge--danger' },
                            //        //3: { 'title': 'Canceled', 'class': ' kt-badge--primary' },
                            //        //4: { 'title': 'Success', 'class': ' kt-badge--success' },
                            //        //5: { 'title': 'Info', 'class': ' kt-badge--info' },
                            //        //6: { 'title': 'Danger', 'class': ' kt-badge--danger' },
                            //        //7: { 'title': 'Warning', 'class': ' kt-badge--warning' },
                            //    };
                            //    column.data().unique().sort().each(function(d, j) {
                            //        $('.kt-input[data-col-index="10"]')
                            //            .append('<option value="' + d + '">' + status[d].title + '</option>');
                            //    });
                            //    break;

                            //case 'Active':
                            //    var status = {
                            //        true: { 'title': 'Yes', 'state': 'primary' },
                            //        false: { 'title': 'No', 'state': 'danger' },
                            //        //1: { 'title': 'Online', 'state': 'danger' },
                            //        //2: { 'title': 'Retail', 'state': 'primary' },
                            //        //3: { 'title': 'Direct', 'state': 'success' },
                            //    };
                            //    column.data().unique().sort().each(function(d, j) {
                            //        $('.kt-input[data-col-index="9"]')
                            //            .append('<option value="' + d + '" ' + (status[d].title  ===  "Yes" ? 'selected' : '') + '>' + status[d].title + '</option>'); // Set selected
                            //    });
                            //    break;
                        }
                    });
                },
                columnDefs: [
                    {
                        targets: 0,
                        width: "100px",
                        title: 'Actions',
                        orderable: false,
                        render: function (data, type, full, meta) {

                            return '<a href="/Users/ManageUser/' +
                                full['Id'] +
                                '" class="btn btn-sm btn-clean btn-icon btn-icon-md" title="Edit"><i class="la la-edit"></i></a>' +
                                //'<a href="#" class="btn btn-sm btn-clean btn-icon btn-icon-md" title="View"><i class="la la-clipboard"></i></a>' +
                                '<span class="dropdown"><a href="#" class="btn btn-sm btn-clean btn-icon btn-icon-md" data-toggle="dropdown" aria-expanded="true"><i class="la la-ellipsis-v"></i></a>' +
                                '<div class="dropdown-menu dropdown-menu-left">' +
                                '<a onclick="DeleteUser(' + full['Id'] + ',' + full['IsActive'] + ')" id=' +
                                full['Id'] +
                                '  href="javascript:void(0)" class="dropdown-item" title="Delete"><i class="la ' + (full['IsActive'] === true ? 'la-times' : 'la-check') + '"></i>' + (full['IsActive'] === true ? 'Mark Inactive' : 'Mark Active') + '</a>' +
                                '<a class="dropdown-item" href="javascript:void(0)" onclick="OpenResetPassword(' + full['Id'] + ')"><i class="la la-key"></i>Reset Password</a>' +
                                (full['IsLoggedIn'] === true && full['RoleId'] === 2 ? '<a class="dropdown-item" href="javascript:void(0)" onclick="fLogout(' + full['Id'] + ')"><i class="la la-sign-out"></i>Force Logout</a>' : '') +
                                '</div></span>';
                        }
                    },
                    { "visible": false, "targets": [1] },

                    { "visible": false, "targets": [6] },
                    { "visible": false, "targets": [8] },
                    {
                        "render": function (data, type, row) {
                            var status = {
                                true: { 'title': 'Yes', 'state': 'primary' },
                                false: { 'title': 'No', 'state': 'danger' },
                                //1: { 'title': 'Online', 'state': 'danger' },
                                //2: { 'title': 'Retail', 'state': 'primary' },
                                //3: { 'title': 'Direct', 'state': 'success' },
                            };
                            if (typeof status[data] === 'undefined') {
                                return data;
                            }
                            return '<span class="kt-badge kt-badge--' +
                                status[data].state +
                                ' kt-badge--dot"></span>&nbsp;' +
                                '<span class="kt-font-bold kt-font-' +
                                status[data].state +
                                '">' +
                                status[data].title +
                                '</span>';
                        },
                        "targets": 9
                    },
                    {
                        "render": function (data, type, row, meta) {
                            var status = {
                                true: { 'title': 'Online', 'class': 'kt-badge--success' },
                                false: { 'title': 'Offline', 'class': ' kt-badge--danger' },
                                //1: { 'title': 'Pending', 'class': 'kt-badge--brand' },
                                //2: { 'title': 'Delivered', 'class': ' kt-badge--danger' },
                                //3: { 'title': 'Canceled', 'class': ' kt-badge--primary' },
                                //4: { 'title': 'Success', 'class': ' kt-badge--success' },
                                //5: { 'title': 'Info', 'class': ' kt-badge--info' },
                                //6: { 'title': 'Danger', 'class': ' kt-badge--danger' },
                                //7: { 'title': 'Warning', 'class': ' kt-badge--warning' },
                            };
                            if (typeof status[data] === 'undefined') {
                                return data;
                            }
                            return '<span class="kt-badge ' +
                                status[data].class +
                                ' kt-badge--inline kt-badge--pill">' +
                                status[data].title +
                                '</span>';
                            //+(data === true ? '<br><small>( ' + row['DeviceId'] + ' )</small>' : '');
                        },
                        "targets": 10
                    },
                    //{ "visible": false, "targets": [12] },
                    //{ "visible": false, "targets": [13] },
                    //{
                    //    targets: -3,
                    //    width: "100px",
                    //}
                ],

            });


            $('#kt_search').on('click',
                function (e) {
                    e.preventDefault();
                    var params = {};
                    $('.kt-input').each(function () {
                        var i = $(this).data('col-index');
                        if (params[i]) {
                            params[i] += '|' + $(this).val();
                        } else {
                            params[i] = $(this).val();
                        }

                    });
                    $.each(params,
                        function (i, val) {
                            // apply search params to datatable
                            table.column(i).search(val ? val : '', false, false);
                        });
                    table.table().draw();
                });

            $('#kt_reset').on('click',
                function (e) {
                    e.preventDefault();
                    $('.kt-input').each(function () {
                        $(this).val('');
                        table.column($(this).data('col-index')).search('', false, false);
                    });
                    table.table().draw();
                });

            $('#export_print').on('click',
                function (e) {
                    e.preventDefault();
                    table.button(0).trigger();
                });

            $('#export_copy').on('click',
                function (e) {
                    e.preventDefault();
                    table.button(1).trigger();
                });

            $('#export_excel').on('click',
                function (e) {
                    e.preventDefault();
                    table.button(2).trigger();
                });

            $('#export_csv').on('click',
                function (e) {
                    e.preventDefault();
                    table.button(3).trigger();
                });
            $('#export_pdf').on('click',
                function (e) {
                    e.preventDefault();
                    table.button(4).trigger();
                });
            //-------------------------------
            $('#export_print_all').on('click',
                function (e) {
                    loading.Show();
                    e.preventDefault();
                    prevLen = table.page.len();
                    currentLen = table.page.len();

                    if (currentLen !== -1) {
                        table.page.len(-1).draw();
                        while (true) {
                            if (currentLen >= prevLen) {
                                setTimeout(function () { table.button(0).trigger(); }, 3000);
                                break;
                            }
                            currentLen = table.page.len();
                        }
                        setTimeout(function () {
                            table.page.len(prevLen).draw(0);
                            loading.Hide();
                        },
                            3000);

                    } else {
                        table.button(4).trigger();
                        loading.Hide();
                    }
                });

            $('#export_copy_all').on('click',
                function (e) {
                    loading.Show();
                    e.preventDefault();
                    //prevPage=table.page();
                    prevLen = table.page.len();
                    currentLen = table.page.len();

                    if (currentLen !== -1) {
                        table.page.len(-1).draw();
                        while (true) {
                            if (currentLen >= prevLen) {
                                setTimeout(function () { table.button(1).trigger(); }, 3000);
                                break;
                            }
                            currentLen = table.page.len();
                        }
                        setTimeout(function () {
                            table.page.len(prevLen).draw();
                            loading.Hide();
                        },
                            3000);
                    } else {
                        table.button(1).trigger();
                        loading.Hide();
                    }
                });

            $('#export_excel_all').on('click',
                function (e) {
                    loading.Show();
                    e.preventDefault();
                    prevLen = table.page.len();
                    currentLen = table.page.len();

                    if (currentLen !== -1) {
                        table.page.len(-1).draw();
                        while (true) {
                            if (currentLen >= prevLen) {
                                setTimeout(function () { table.button(2).trigger(); }, 3000);
                                break;
                            }
                            currentLen = table.page.len();
                        }
                        setTimeout(function () {
                            table.page.len(prevLen).draw();
                            loading.Hide();
                        },
                            3000);

                    } else {
                        table.button(2).trigger();
                        loading.Hide();
                    }
                });

            $('#export_csv_all').on('click',
                function (e) {
                    loading.Show();
                    e.preventDefault();
                    prevLen = table.page.len();
                    currentLen = table.page.len();

                    if (currentLen !== -1) {
                        table.page.len(-1).draw();
                        while (true) {
                            if (currentLen >= prevLen) {
                                setTimeout(function () { table.button(3).trigger(); }, 3000);
                                break;
                            }
                            currentLen = table.page.len();
                        }
                        setTimeout(function () {
                            table.page.len(prevLen).draw();
                            loading.Hide();
                        },
                            3000);
                    } else {
                        table.button(3).trigger();
                        loading.Hide();
                    }
                });
            $('#export_pdf_all').on('click',
                function (e) {
                    loading.Show();
                    e.preventDefault();
                    prevLen = table.page.len();
                    currentLen = table.page.len();

                    if (currentLen !== -1) {
                        table.page.len(-1).draw();
                        while (true) {
                            if (currentLen >= prevLen) {
                                setTimeout(function () { table.button(4).trigger(); }, 3000);
                                break;
                            }
                            currentLen = table.page.len();
                        }
                        setTimeout(function () {
                            table.page.len(prevLen).draw();
                            loading.Hide();
                        },
                            3000);

                    } else {
                        table.button(4).trigger();
                        loading.Hide();
                    }
                });

        });
        function DeleteUser(uid, IsActive) {
            swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, mark it' + (IsActive ? ' Inactive!' : ' Active'),
                cancelButtonText: 'No, cancel!',
                reverseButtons: false
            }).then(function (result) {
                if (result.value) {
                    //--Ajax Request
                    $.ajax({
                        url: '@Url.Action("DeleteUser", "Users")',
                        method: 'post',
                        data: { Id: uid },
                        success: function (data) {
                            if (data.result) {
                                table.draw();
                                swal.fire({
                                    title: 'Successful',
                                    text: data.message,
                                    timer: 2000,
                                    type: 'success'
                                });

                            } else {
                                swal.fire({
                                    title: 'Error',
                                    text: data.message,
                                    timer: 2000,
                                    type: 'error'
                                });
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            swal.fire({
                                title: 'Error',
                                text: 'Something went wrong please try again.',
                                timer: 2000,
                                type: 'error'
                            });
                        }
                    });
                    //-----
                    // result.dismiss can be 'cancel', 'overlay','close', and 'timer'
                }
            });
        }
        function fLogout(Id) {
            swal.fire({
                title: 'Are you sure?',
                //text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, Force Logout',
                cancelButtonText: 'No, cancel!',
                reverseButtons: false
            }).then(function (result) {
                if (result.value) {
                    //--Ajax Request
                    $.ajax({
                        url: '@Url.Action("ForceLogout", "Users")',
                        method: 'post',
                        data: { Id: Id },
                        success: function (data) {
                            if (data.result) {
                                table.draw();
                                swal.fire({
                                    title: 'Successful',
                                    text: data.message,
                                    timer: 2000,
                                    type: 'success'
                                });
                            } else {
                                swal.fire({
                                    title: 'Error',
                                    text: data.message,
                                    timer: 2000,
                                    type: 'error'
                                });
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            swal.fire({
                                title: 'Error',
                                text: 'Something went wrong please try again.',
                                timer: 2000,
                                type: 'error'
                            });
                        }
                    });
                }
            });
        }
    </script>

}
